"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.authentication = void 0;
const task_1 = require("../util/task");
const ui = __importStar(require("./ui/authentication"));
const env_1 = require("../util/env");
const error_1 = require("../util/error");
const ts_dedent_1 = __importDefault(require("ts-dedent"));
const chalk_1 = __importDefault(require("chalk"));
const logger_1 = __importDefault(require("../util/logger"));
const checkAuthentication = (ctx, task) => {
    if (ctx.auth) {
        task.skip(ctx, ui.alreadyAuthenticated);
    }
};
const authenticate = (ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const requiredScopes = ["read", "write"];
    try {
        ctx.auth = yield ctx.authService.authenticate({ requiredScopes });
    }
    catch (error) {
        if (error_1.isAuthenticationError(error)) {
            if (env_1.isCI()) {
                error.message = ts_dedent_1.default `
                    ${error.message}
                    Please update ${chalk_1.default.dim `ZEPLIN_ACCESS_TOKEN`} environment variable.
                `;
            }
            else {
                logger_1.default.info(error.message);
                ctx.auth = yield ctx.authService.promptForLogin({ requiredScopes, forceRenewal: true });
                return;
            }
        }
        throw error;
    }
});
exports.authentication = new task_1.Task({
    steps: [
        checkAuthentication,
        task_1.transitionTo(ui.authenticating),
        task_1.pauseSpinningAndExecuteTask(authenticate),
        task_1.transitionTo(ui.authenticated)
    ],
    initial: ui.initial
});
