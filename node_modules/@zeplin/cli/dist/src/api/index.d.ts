import { AxiosInstance } from "axios";
import { LoginRequest, LoginResponse, ProjectsResponse, ProjectResponse, StyleguidesResponse, StyleguideResponse } from "./interfaces";
import { ConnectedComponentList } from "../commands/connect/interfaces/api";
export declare type BarrelType = "projects" | "styleguides";
export declare class ZeplinApi {
    axios: AxiosInstance;
    constructor();
    login(request: LoginRequest): Promise<LoginResponse>;
    generateToken(zeplinToken: string): Promise<string>;
    revokeToken(authToken: string): Promise<void>;
    uploadConnectedComponents(authToken: string, params: {
        barrelId: string;
        barrelType: BarrelType;
    }, body: ConnectedComponentList): Promise<void>;
    deleteConnectedComponents(authToken: string, params: {
        barrelId: string;
        barrelType: BarrelType;
    }): Promise<void>;
    getProjects(authToken: string): Promise<ProjectsResponse>;
    getProject(authToken: string, projectId: string): Promise<ProjectResponse>;
    getStyleguides(authToken: string): Promise<StyleguidesResponse>;
    getStyleguide(authToken: string, styleguideId: string, params?: {
        linkedProjectId?: string;
        linkedStyleguideId?: string;
    }): Promise<StyleguideResponse>;
}
