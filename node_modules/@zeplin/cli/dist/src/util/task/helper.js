"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.pauseSpinningAndExecutePromise = exports.pauseSpinningAndExecuteTask = exports.executePromise = exports.transitionTo = void 0;
function execute(func, options = { stopSpinning: false }) {
    return (ctx, task) => __awaiter(this, void 0, void 0, function* () {
        if (options.stopSpinning) {
            task.stopSpinner(ctx);
        }
        yield func(ctx, task);
        if (options.stopSpinning) {
            task.startSpinner(ctx);
        }
    });
}
function transitionTo(ui) {
    return () => ui;
}
exports.transitionTo = transitionTo;
function executePromise(func, options = { stopSpinning: false }) {
    const task = () => __awaiter(this, void 0, void 0, function* () {
        yield func();
    });
    return execute(task, options);
}
exports.executePromise = executePromise;
function pauseSpinningAndExecuteTask(func) {
    return execute(func, { stopSpinning: true });
}
exports.pauseSpinningAndExecuteTask = pauseSpinningAndExecuteTask;
function pauseSpinningAndExecutePromise(func) {
    return execute(func, { stopSpinning: true });
}
exports.pauseSpinningAndExecutePromise = pauseSpinningAndExecutePromise;
