import { ConnectPlugin, ComponentConfig, ComponentData, PluginContext, Logger } from "@zeplin/cli";
import pug from "pug";
import { withCustomConfig, withDefaultConfig } from "react-docgen-typescript";
interface ReactPluginConfig {
    tsDocgen: "react-docgen" | "react-docgen-typescript";
    tsConfigPath: string;
    reactDocgenResolver?: string;
}
export default class implements ConnectPlugin {
    supportedFileExtensions: string[];
    tsExtensions: string[];
    logger?: Logger;
    config: ReactPluginConfig;
    reactTsDocgen: {
        withCustomConfig: typeof withCustomConfig;
        withDefaultConfig: typeof withDefaultConfig;
    } | null;
    resolver: any;
    template: pug.compileTemplate;
    init(pluginContext: PluginContext): Promise<void>;
    process(context: ComponentConfig): Promise<ComponentData>;
    supports(x: ComponentConfig): boolean;
    private generateSnippet;
    private parseUsingReactDocgen;
    private parseUsingReactDocgenTypescript;
}
export {};
