{"version":3,"file":"main.4a0cc2ec815ab1806adb.hot-update.js","sources":["webpack:///./src/components/datepicker/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { H2Bold, Element4Medium, Element4Regular } from \"./../../global-style\";\nimport leftArrow from \"./../../assets/left-arrow.svg\";\nimport rightArrow from \"./../../assets/right-arrow.svg\";\nimport disLeftArrow from \"./../../assets/disabled-left-arrow.svg\";\nimport disRightArrow from \"./../../assets/disabled-right-arrow.svg\";\n\nexport interface DatepickerProps {\n  defaultYear?: number;\n  defaultMonth?: number;\n  defaultDate?: number;\n  privous?: boolean;\n  next?: boolean;\n  isOpenDatePicker?: boolean;\n  setIsOpenDatePicker?: (isOpenDatePicker: boolean) => void;\n  getDate: (date: Date) => void;\n}\n\nexport const DatepickerComponent = ({\n  defaultYear = new Date().getFullYear(),\n  defaultMonth = new Date().getMonth() + 1,\n  defaultDate = new Date().getDate(),\n  privous = true,\n  next = true,\n  isOpenDatePicker,\n  setIsOpenDatePicker,\n  getDate,\n}: DatepickerProps) => {\n  const [date, setDate] = React.useState({\n    year: defaultYear,\n    month: defaultMonth,\n    date: defaultDate,\n  });\n\n  const toNext = () => {\n    if (date.month === 12) {\n      setDate({ year: defaultYear + 1, month: 1, date: 1 });\n    } else {\n      setDate({ year: defaultYear, month: defaultMonth + 1, date: 1 });\n    }\n  };\n\n  const toPrivous = () => {\n    if (date.month === 1) {\n      setDate({ year: defaultYear - 1, month: 12, date: 1 });\n    } else {\n      setDate({ year: defaultYear, month: defaultMonth - 1, date: 1 });\n    }\n  };\n\n  const onClickDay = (dateparam: number) => {\n    getDate(new Date(`${date.year}-${date.month}-${dateparam}`));\n    if (setIsOpenDatePicker) {\n      setIsOpenDatePicker(!isOpenDatePicker);\n    }\n  };\n\n  useEffect(() => {\n    getDate(new Date(date.year, date.month - 1, date.date));\n  }, [date]);\n  //자식의 state값 부모의 state값으로 보내기\n\n  useEffect(() => {\n    setDate({ year: defaultYear, month: defaultMonth, date: defaultDate });\n  }, [defaultDate]);\n  //부모의 값을 자식으로 동기화시킬려고\n  // 부모의 state값을 자식의 state값으로 넘기는거고\n\n  return (\n    <Datepicker>\n      <HeaderWrapper>\n        <H2Bold>\n          {date.year}년 {date.month}월\n        </H2Bold>\n        <ArrowWrapper>\n          <Arrow disabled={!privous} onClick={toPrivous}>\n            {privous ? (\n              <img src={leftArrow} alt=\"\" />\n            ) : (\n              <img src={disLeftArrow} alt=\"\" />\n            )}\n          </Arrow>\n          <Arrow disabled={!next} onClick={toNext}>\n            {next ? (\n              <img src={rightArrow} alt=\"\" />\n            ) : (\n              <img src={disRightArrow} alt=\"\" />\n            )}\n          </Arrow>\n        </ArrowWrapper>\n      </HeaderWrapper>\n      <DayWrapper>\n        <DayTitleWrapper>\n          {[\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"].map((val, idx) => {\n            return (\n              <DayTitleItem key={idx}>\n                <Element4Medium>{val}</Element4Medium>\n              </DayTitleItem>\n            );\n          })}\n        </DayTitleWrapper>\n        <DayContentWrapper>\n          {getMonthDay(date.year, date.month, date.date).map((val, idx) => {\n            return (\n              <DayItem\n                isEnabled={val.isEnabled}\n                key={idx}\n                check={val.isEnabled && defaultDate === val.date}\n                onClick={() => (val.isEnabled ? onClickDay(val.date) : null)}\n              >\n                <Element4Regular>{val.date}</Element4Regular>\n              </DayItem>\n            );\n          })}\n        </DayContentWrapper>\n      </DayWrapper>\n    </Datepicker>\n  );\n};\n\nconst getMonthDay = (\n  defaultYear: number,\n  defaultMonth: number,\n  defaultDate: number\n) => {\n  const startDate = new Date(defaultYear, defaultMonth - 1);\n  const endDate = new Date(defaultYear, defaultMonth, 0);\n\n  const startDay = startDate.getDay() - 1;\n  let endDay = endDate.getDay() - 1;\n\n  if (endDay < 0) endDay = 6;\n\n  startDate.setDate(startDate.getDate() - startDay);\n  endDate.setDate(endDate.getDate() + (6 - endDay));\n\n  const dateArr: {\n    isEnabled: boolean;\n    date: number;\n  }[] = [];\n\n  let loop = new Date(startDate);\n\n  while (loop <= endDate) {\n    if (defaultMonth !== loop.getMonth() + 1) {\n      dateArr.push({\n        isEnabled: false,\n        date: loop.getDate(),\n      });\n    } else {\n      dateArr.push({\n        isEnabled: true,\n        date: loop.getDate(),\n      });\n    }\n    const newDate = loop.setDate(loop.getDate() + 1);\n    loop = new Date(newDate);\n  }\n  return dateArr;\n};\n\nconst Datepicker = styled.div`\n  width: 20.5rem;\n  padding: 1.5rem;\n  border-radius: 10px;\n  box-shadow: 0 4px 18px 1px rgba(0, 0, 0, 0.25);\n  background-color: var(--white);\n`;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1.375rem;\n`;\n\nconst ArrowWrapper = styled.div``;\n\nconst Arrow = styled.button`\n  width: 1.5rem;\n  height: 1.5rem;\n  border: none;\n  background-color: white;\n  cursor: ${(props) => (!props.disabled ? \"pointer\" : \"not-allowed\")};\n  margin-left: 0.25rem;\n`;\n\nconst DayWrapper = styled.div``;\n\nconst DayTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst DayTitleItem = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst DayContentWrapper = styled.div`\n  border-bottom: 1px solid var(--gray-30);\n`;\n\nconst DayItem = styled.button<{ isEnabled: boolean; check: boolean }>`\n  width: 2.5rem;\n  height: 2.5rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid var(--gray-30);\n  ${(props) =>\n    props.isEnabled\n      ? \"background-color: var(--white);\"\n      : \"background-color: var(--gray-5);\"}\n  ${(props) => props.check && \"background-color: var(--ihpblue-50) !important;\"}\n  ${(props) =>\n    props.check ? \"color: var(--white);\" : \"color: var(--gray-90);\"}\n  border-right: none;\n  border-bottom: none;\n  cursor: ${(props) => (props.isEnabled ? \"pointer\" : \"not-allowed\")};\n  &:nth-child(7n) {\n    border-right: 1px solid var(--gray-30);\n  }\n  &:hover {\n    ${(props) =>\n      props.isEnabled\n        ? \"background-color:var(--ihpblue-50); color: var(--white);\"\n        : \"background-color: var(--gray-5); color: var(--gray-90);\"}\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAIA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAEA;AAEA;AACA;AAJA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AASA;AAZA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAiDA;AACA;AArGA;AACA;AADA;AACA;AAqGA;AAKA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AA1BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}