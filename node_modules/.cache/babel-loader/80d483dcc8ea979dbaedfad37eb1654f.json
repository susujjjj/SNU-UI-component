{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/SNU-UI-component/src/components/dashboardTitle/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport InfoIcon from \"./../../assets/ic-information-16.svg\";\nimport { TooltipComponent } from './../tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DashboardTitleComponent = ({\n  children,\n  title\n}) => {\n  _s();\n\n  const [isHoverTooltip, setIsHoverTooltip] = React.useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const targetRef = useRef(null);\n  const showTooltip = isHovered || isFocused;\n  return /*#__PURE__*/_jsxDEV(TitleWrapper, {\n    children: /*#__PURE__*/_jsxDEV(TitleBox, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgBox, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: InfoIcon,\n          alt: \"\",\n          onMouseEnter: () => setIsHovered(true),\n          onMouseLeave: () => setIsHovered(false),\n          onFocus: () => setIsFocused(true),\n          onBlur: () => setIsFocused(false),\n          ref: targetRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), showTooltip && /*#__PURE__*/_jsxDEV(TooltipComponent, {\n          arrowX: \"right\",\n          arrowY: \"bottom\",\n          label: \"text\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardTitleComponent, \"YsGxTJK9VH66Mlpb5v5m6j4YXDQ=\");\n\n_c = DashboardTitleComponent;\nconst TitleWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n_c2 = TitleWrapper;\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 46rem;\n  height: 3rem;\n  padding: 0.875rem 0 0;\n  border-bottom: 1px solid var(--dustyblue-40);\n`;\n_c3 = TitleBox;\nconst ImgBox = styled.div`\n  width: 2rem;\n  height: 2rem;\n  margin-right: 1.042rem;\n  cursor: pointer;\n  img {\n    width: 100%;\n    width: 1rem;\n    height: 1rem;\n    margin-right: 1.042rem;\n    cursor: pointer;\n    &:hover {\n    }\n  }\n`;\n_c4 = ImgBox;\nconst Title = styled.span`\n  margin: 0 0 0.813rem 1rem;\n  font-size: 1rem;\n  font-weight: bold;\n  line-height: 1.25;\n  text-align: left;\n  color: var(--gray-80);\n`;\n_c5 = Title;\nconst TooltipTarget = styled.div``;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DashboardTitleComponent\");\n$RefreshReg$(_c2, \"TitleWrapper\");\n$RefreshReg$(_c3, \"TitleBox\");\n$RefreshReg$(_c4, \"ImgBox\");\n$RefreshReg$(_c5, \"Title\");","map":{"version":3,"sources":["/Volumes/data/SNU-UI-component/src/components/dashboardTitle/index.tsx"],"names":["React","useState","useRef","styled","TooltipComponent","DashboardTitleComponent","children","title","isHoverTooltip","setIsHoverTooltip","isHovered","setIsHovered","isFocused","setIsFocused","targetRef","showTooltip","InfoIcon","TitleWrapper","div","TitleBox","ImgBox","Title","span","TooltipTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,gBAAT,QAAiC,cAAjC;;AAQA,OAAO,MAAMC,uBAAuB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwC;AAAA;;AAC7E,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,KAAK,CAACC,QAAN,CAAe,KAAf,CAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMa,SAAS,GAAGZ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMa,WAAW,GAAGL,SAAS,IAAIE,SAAjC;AAEA,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,QAAD;AAAA,8BACE,QAAC,KAAD;AAAA,kBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE;AACE,UAAA,GAAG,EAAES,QADP;AAEE,UAAA,GAAG,EAAC,EAFN;AAGE,UAAA,YAAY,EAAE,MAAML,YAAY,CAAC,IAAD,CAHlC;AAIE,UAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,KAAD,CAJlC;AAKE,UAAA,OAAO,EAAE,MAAME,YAAY,CAAC,IAAD,CAL7B;AAME,UAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,KAAD,CAN5B;AAOE,UAAA,GAAG,EAAEC;AAPP;AAAA;AAAA;AAAA;AAAA,gBADF,EAUGC,WAAW,iBACV,QAAC,gBAAD;AAAkB,UAAA,MAAM,EAAC,OAAzB;AAAiC,UAAA,MAAM,EAAC,QAAxC;AAAiD,UAAA,KAAK,EAAC,MAAvD;AAAA,oBACGT;AADH;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA9BM;;GAAMD,uB;;KAAAA,uB;AAgCb,MAAMY,YAAY,GAAGd,MAAM,CAACe,GAAI;AAChC;AACA;AACA,CAHA;MAAMD,Y;AAKN,MAAME,QAAQ,GAAGhB,MAAM,CAACe,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,Q;AASN,MAAMC,MAAM,GAAGjB,MAAM,CAACe,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAME,M;AAgBN,MAAMC,KAAK,GAAGlB,MAAM,CAACmB,IAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,K;AAQN,MAAME,aAAa,GAAGpB,MAAM,CAACe,GAAI,EAAjC","sourcesContent":["import React, { useState, useRef, Children } from 'react';\nimport styled from 'styled-components';\nimport InfoIcon from './../../assets/ic-information-16.svg';\nimport { TooltipComponent } from './../tooltip';\n\nexport interface BasedateProps {\n  children: any;\n  title: string;\n  label: string;\n}\n\nexport const DashboardTitleComponent = ({ children, title }: BasedateProps) => {\n  const [isHoverTooltip, setIsHoverTooltip] = React.useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const targetRef = useRef(null);\n  const showTooltip = isHovered || isFocused;\n\n  return (\n    <TitleWrapper>\n      <TitleBox>\n        <Title>{title}</Title>\n        <ImgBox>\n          <img\n            src={InfoIcon}\n            alt=\"\"\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={() => setIsHovered(false)}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            ref={targetRef}\n          />\n          {showTooltip && (\n            <TooltipComponent arrowX=\"right\" arrowY=\"bottom\" label=\"text\">\n              {children}\n            </TooltipComponent>\n          )}\n        </ImgBox>\n      </TitleBox>\n    </TitleWrapper>\n  );\n};\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 46rem;\n  height: 3rem;\n  padding: 0.875rem 0 0;\n  border-bottom: 1px solid var(--dustyblue-40);\n`;\n\nconst ImgBox = styled.div`\n  width: 2rem;\n  height: 2rem;\n  margin-right: 1.042rem;\n  cursor: pointer;\n  img {\n    width: 100%;\n    width: 1rem;\n    height: 1rem;\n    margin-right: 1.042rem;\n    cursor: pointer;\n    &:hover {\n    }\n  }\n`;\n\nconst Title = styled.span`\n  margin: 0 0 0.813rem 1rem;\n  font-size: 1rem;\n  font-weight: bold;\n  line-height: 1.25;\n  text-align: left;\n  color: var(--gray-80);\n`;\nconst TooltipTarget = styled.div``;\n"]},"metadata":{},"sourceType":"module"}