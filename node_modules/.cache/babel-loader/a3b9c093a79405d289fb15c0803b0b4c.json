{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/SNU-UI-component/src/components/barchart/index.tsx\";\nimport React from 'react';\nimport { Bar, BarChart, CartesianGrid, Label, LabelList, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderBarLabel = props => {\n  const {\n    x,\n    y,\n    width,\n    height,\n    value\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x + width / 2,\n      y: y - 10,\n      fill: \"#000\",\n      fontSize: \"13\",\n      fontWeight: \"bold\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"middle\",\n      fontFamily: \"Pretendard\",\n      children: value.toFixed(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nconst renderXLabel = props => {\n  const {\n    value,\n    angle,\n    x,\n    y\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: /*#__PURE__*/_jsxDEV(\"text\", {\n      x: x,\n      y: y,\n      fill: \"#333333\",\n      fontSize: \"13\",\n      fontWeight: \"bold\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"middle\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\nconst renderYLabel = props => {\n  const {\n    value,\n    angle,\n    x,\n    y\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: /*#__PURE__*/_jsxDEV(\"text\", {\n      transform: `rotate(${angle})`,\n      x: x,\n      y: y,\n      fontSize: \"13\",\n      fill: \"#333333\",\n      fontWeight: \"bold\",\n      textAnchor: \"middle\",\n      dominantBaseline: \"middle\",\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\nexport const BarchartComponent = ({\n  data,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 684,\n    height: 346,\n    data: data,\n    margin: {\n      top: 20,\n      right: 0,\n      left: 10,\n      bottom: 45\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      stroke: \"#e2e7ed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"date\",\n      tickSize: 16,\n      dy: 8,\n      stroke: \"#e2e7ed\",\n      tick: {\n        fill: '#505050',\n        width: 40,\n        fontSize: 12\n      },\n      allowDataOverflow: true,\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        value: props.xAxisLabel.value,\n        offset: props.xAxisLabel.offset,\n        x: props.xAxisLabel.x,\n        y: props.xAxisLabel.y,\n        content: renderXLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      tickLine: false,\n      axisLine: false,\n      tick: {\n        fill: '#1e1e1e',\n        fontSize: 13\n      },\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        value: props.yAxisLabel.value,\n        x: props.yAxisLabel.x,\n        y: props.yAxisLabel.y,\n        angle: props.yAxisLabel.angle,\n        content: renderYLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"takeMedicineCount\",\n      barSize: 40,\n      fill: props.barColor,\n      children: /*#__PURE__*/_jsxDEV(LabelList, {\n        dataKey: \"takeMedicineCount\",\n        content: renderBarLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = BarchartComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarchartComponent\");","map":{"version":3,"sources":["/Volumes/data/SNU-UI-component/src/components/barchart/index.tsx"],"names":["React","Bar","BarChart","CartesianGrid","Label","LabelList","Tooltip","XAxis","YAxis","renderBarLabel","props","x","y","width","height","value","toFixed","renderXLabel","angle","renderYLabel","BarchartComponent","data","top","right","left","bottom","fill","fontSize","xAxisLabel","offset","yAxisLabel","barColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Label,\n  LabelList,\n  LabelProps,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nexport interface BarchartProps {\n  xAxisLabel: {\n    value: string;\n    offset: number;\n    x: number;\n    y: number;\n  };\n  yAxisLabel: {\n    value: string;\n    angle: number;\n    x: number;\n    y: number;\n  };\n  barColor: string;\n  data?: Array<any>;\n}\n\nconst renderBarLabel = (props: LabelProps) => {\n  const { x, y, width, height, value } = props;\n\n  return (\n    <g>\n      <text\n        x={(x as number) + (width as number) / 2}\n        y={(y as number) - 10}\n        fill=\"#000\"\n        fontSize=\"13\"\n        fontWeight=\"bold\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        fontFamily=\"Pretendard\"\n      >\n        {(value as number).toFixed(1)}\n      </text>\n    </g>\n  );\n};\n\nconst renderXLabel = (props: LabelProps) => {\n  const { value, angle, x, y } = props;\n\n  return (\n    <g>\n      <text\n        x={x}\n        y={y}\n        fill=\"#333333\"\n        fontSize=\"13\"\n        fontWeight=\"bold\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n\nconst renderYLabel = (props: LabelProps) => {\n  const { value, angle, x, y } = props;\n\n  return (\n    <g>\n      <text\n        transform={`rotate(${angle})`}\n        x={x}\n        y={y}\n        fontSize=\"13\"\n        fill=\"#333333\"\n        fontWeight=\"bold\"\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n\nexport const BarchartComponent = ({ data, ...props }: BarchartProps) => {\n  return (\n    <BarChart\n      width={684}\n      height={346}\n      data={data}\n      margin={{\n        top: 20,\n        right: 0,\n        left: 10,\n        bottom: 45,\n      }}\n    >\n      <CartesianGrid stroke=\"#e2e7ed\" />\n      <XAxis\n        dataKey=\"date\"\n        tickSize={16}\n        dy={8}\n        stroke=\"#e2e7ed\"\n        tick={{ fill: '#505050', width: 40, fontSize: 12 }}\n        allowDataOverflow\n      >\n        <Label\n          value={props.xAxisLabel.value}\n          offset={props.xAxisLabel.offset}\n          x={props.xAxisLabel.x}\n          y={props.xAxisLabel.y}\n          content={renderXLabel}\n        />\n      </XAxis>\n      <YAxis tickLine={false} axisLine={false} tick={{ fill: '#1e1e1e', fontSize: 13 }}>\n        <Label\n          value={props.yAxisLabel.value}\n          x={props.yAxisLabel.x}\n          y={props.yAxisLabel.y}\n          angle={props.yAxisLabel.angle}\n          content={renderYLabel}\n        />\n      </YAxis>\n      <Tooltip />\n      <Bar dataKey=\"takeMedicineCount\" barSize={40} fill={props.barColor}>\n        <LabelList dataKey=\"takeMedicineCount\" content={renderBarLabel} />\n      </Bar>\n    </BarChart>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}