{"ast":null,"code":"var _jsxFileName = \"/Volumes/data/SNU-UI-component/src/components/textfield/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport IcClose from \"./../../assets/ic.svg\";\nimport IcViewActive from \"./../../assets/active-ic-view.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextFieldComponent = ({\n  type = 'text',\n  value,\n  placeholder\n}) => {\n  _s();\n\n  const [color, setColor] = React.useState('#606060');\n  const [view, setView] = React.useState(false);\n  const [textValue, setTextValue] = React.useState(value);\n\n  const clickClose = () => {\n    setTextValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextFieldWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      type: view ? 'text' : type,\n      value: textValue,\n      placeholder: placeholder,\n      view: view,\n      onFocus: () => setColor('#000'),\n      onBlur: () => setColor('#606060'),\n      onChange: e => setTextValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), type === 'password' && (textValue === null || textValue === void 0 ? void 0 : textValue.length) > 0 ? /*#__PURE__*/_jsxDEV(ViewButton, {\n      onClick: () => setView(!view),\n      children: /*#__PURE__*/_jsxDEV(ViewImg, {\n        src: IcViewActive,\n        color: color,\n        width: \"20\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : null, type === 'text' && (textValue === null || textValue === void 0 ? void 0 : textValue.length) > 0 ? /*#__PURE__*/_jsxDEV(ViewButton, {\n      children: /*#__PURE__*/_jsxDEV(ViewImg, {\n        src: IcClose,\n        color: color,\n        width: \"20\",\n        alt: \"\",\n        onClick: clickClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextFieldComponent, \"U7tLqTTIWtF4dOzlFBCi4cu3Gus=\");\n\n_c = TextFieldComponent;\nconst TextFieldWrapper = styled.div`\n  width: 21.875rem;\n  position: relative;\n`;\n_c2 = TextFieldWrapper;\nconst TextField = styled.input`\n  width: 100%;\n  height: 3.5rem;\n  padding: 1.125rem 1rem;\n  border-radius: 8px;\n  border: solid 1px var(--dustyblue-80);\n  background-color: var(--white);\n  color: var(--gray-90);\n  font-size: 1rem;\n  caret-color: var(--ihpblue-50);\n  ::placeholder {\n    color: var(--gray-40);\n  }\n  &:hover {\n    border-color: var(--dustyblue-50);\n    color: var(--gray-40);\n  }\n  &:focus {\n    outline: none;\n    border-color: var(--ihpblue-50);\n    color: var(--gray-90);\n  }\n`;\n_c3 = TextField;\nconst ViewButton = styled.button`\n  position: absolute;\n  background: none;\n  border: none;\n  right: 1.095rem;\n  top: 1.08rem;\n  padding: 0;\n  cursor: pointer;\n`;\n_c4 = ViewButton;\nconst ViewImg = styled.img`\n  --color-fill: ${props => props.color};\n`;\n_c5 = ViewImg;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TextFieldComponent\");\n$RefreshReg$(_c2, \"TextFieldWrapper\");\n$RefreshReg$(_c3, \"TextField\");\n$RefreshReg$(_c4, \"ViewButton\");\n$RefreshReg$(_c5, \"ViewImg\");","map":{"version":3,"sources":["/Volumes/data/SNU-UI-component/src/components/textfield/index.tsx"],"names":["React","styled","TextFieldComponent","type","value","placeholder","color","setColor","useState","view","setView","textValue","setTextValue","clickClose","e","target","length","IcViewActive","IcClose","TextFieldWrapper","div","TextField","input","ViewButton","button","ViewImg","img","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport IcView from './../../assets/ic-view.svg';\nimport IcClose from './../../assets/ic.svg';\nimport IcViewActive from './../../assets/active-ic-view.svg';\n\nexport interface TextFieldProps {\n  type: 'text' | 'password';\n  value: string;\n  placeholder?: string;\n}\n\nexport const TextFieldComponent = ({ type = 'text', value, placeholder }: TextFieldProps) => {\n  const [color, setColor] = React.useState('#606060');\n  const [view, setView] = React.useState(false);\n  const [textValue, setTextValue] = React.useState(value);\n\n  const clickClose = () => {\n    setTextValue('');\n  };\n\n  return (\n    <TextFieldWrapper>\n      <TextField\n        type={view ? 'text' : type}\n        value={textValue}\n        placeholder={placeholder}\n        view={view}\n        onFocus={() => setColor('#000')}\n        onBlur={() => setColor('#606060')}\n        onChange={(e) => setTextValue(e.target.value)}\n      />\n      {type === 'password' && textValue?.length > 0 ? (\n        <ViewButton onClick={() => setView(!view)}>\n          <ViewImg src={IcViewActive} color={color} width=\"20\" alt=\"\" />\n        </ViewButton>\n      ) : null}\n      {type === 'text' && textValue?.length > 0 ? (\n        <ViewButton>\n          <ViewImg src={IcClose} color={color} width=\"20\" alt=\"\" onClick={clickClose} />\n        </ViewButton>\n      ) : null}\n    </TextFieldWrapper>\n  );\n};\n\nconst TextFieldWrapper = styled.div`\n  width: 21.875rem;\n  position: relative;\n`;\n\nconst TextField = styled.input<{ view: boolean }>`\n  width: 100%;\n  height: 3.5rem;\n  padding: 1.125rem 1rem;\n  border-radius: 8px;\n  border: solid 1px var(--dustyblue-80);\n  background-color: var(--white);\n  color: var(--gray-90);\n  font-size: 1rem;\n  caret-color: var(--ihpblue-50);\n  ::placeholder {\n    color: var(--gray-40);\n  }\n  &:hover {\n    border-color: var(--dustyblue-50);\n    color: var(--gray-40);\n  }\n  &:focus {\n    outline: none;\n    border-color: var(--ihpblue-50);\n    color: var(--gray-90);\n  }\n`;\n\nconst ViewButton = styled.button`\n  position: absolute;\n  background: none;\n  border: none;\n  right: 1.095rem;\n  top: 1.08rem;\n  padding: 0;\n  cursor: pointer;\n`;\n\nconst ViewImg = styled.img`\n  --color-fill: ${(props) => props.color};\n`;\n"]},"metadata":{},"sourceType":"module"}